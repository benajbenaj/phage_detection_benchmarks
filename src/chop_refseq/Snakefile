configfile: "config/config.yaml"

def get_archaea_genomes(wildcards):
	return config["archaea"][wildcards.base]

def get_bacteria_genomes(wildcards):
	return config["bacteria"][wildcards.base]

def get_fungi_genomes(wildcards):
	return config["fungi"][wildcards.base]

def get_viral_genomes(wildcards):
	return config["viral"][wildcards.base] 

rule all:
	input:
		expand("../../data/chopped/archaea/{length}/{genome}_frags.fasta", length=config["lengths"], genome=config["archaea"]),
		expand("../../data/chopped/archaea/{length}/{genome}_frags.tsv", length=config["lengths"], genome=config["archaea"]),
		expand("../../data/chopped/bacteria/{length}/{genome}_frags.fasta", length=config["lengths"], genome=config["bacteria"]),
		expand("../../data/chopped/bacteria/{length}/{genome}_frags.tsv", length=config["lengths"], genome=config["bacteria"]),
		expand("../../data/chopped/fungi/{length}/{genome}_frags.fasta", length=config["lengths"], genome=config["fungi"]),
		expand("../../data/chopped/fungi/{length}/{genome}_frags.tsv", length=config["lengths"], genome=config["fungi"]),
		expand("../../data/chopped/viral/{length}/{genome}_frags.fasta", length=config["lengths"], genome=config["viral"]),
		expand("../../data/chopped/viral/{length}/{genome}_frags.tsv", length=config["lengths"], genome=config["viral"])

rule chop_archaea:
	input:
		get_archaea_genomes
	output:
		fasta="../../data/chopped/archaea/{length}/{base}_frags.fasta",
		tsv="../../data/chopped/archaea/{length}/{base}_frags.tsv"
	params:
		chopper=config["chopper"],
	shell:
		"""
		source ~/.bashrc
		conda activate genome_chopper_env
		
		{params.chopper} -b -l {wildcards.length} -v 0 -o ../../data/chopped/archaea/{wildcards.length} {input}
		"""

rule chop_bacteria:
	input:
		get_bacteria_genomes
	output:
		fasta="../../data/chopped/bacteria/{length}/{base}_frags.fasta",
		tsv="../../data/chopped/bacteria/{length}/{base}_frags.tsv"
	params:
		chopper=config["chopper"],
	shell:
		"""
		source ~/.bashrc
		conda activate genome_chopper_env
		
		{params.chopper} -b -l {wildcards.length} -v 0 -o ../../data/chopped/bacteria/{wildcards.length} {input}
		"""
		
rule chop_fungi:
	input:
		get_fungi_genomes
	output:
		fasta="../../data/chopped/fungi/{length}/{base}_frags.fasta",
		tsv="../../data/chopped/fungi/{length}/{base}_frags.tsv"
	params:
		chopper=config["chopper"],
	shell:
		"""
		source ~/.bashrc
		conda activate genome_chopper_env
		
		{params.chopper} -b -l {wildcards.length} -v 0 -o ../../data/chopped/fungi/{wildcards.length} {input}
		"""
		
rule chop_viral:
	input:
		get_viral_genomes
	output:
		fasta="../../data/chopped/viral/{length}/{base}_frags.fasta",
		tsv="../../data/chopped/viral/{length}/{base}_frags.tsv"
	params:
		chopper=config["chopper"],
	shell:
		"""
		source ~/.bashrc
		conda activate genome_chopper_env
		
		{params.chopper} -b -l {wildcards.length} -v 0 -o ../../data/chopped/viral/{wildcards.length} {input}
		"""
		
