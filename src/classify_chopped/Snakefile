rule all:
    input:
        config["out_dir"] + "/dvf_out/combined.csv",
        config["out_dir"] + "/seeker_out/combined.csv",
        expand(
            "{o}/{k}/{l}/virsorter_out/final-viral-score.tsv",
            o=config["out_dir"],
            k=config["kingdoms"],
            l=config["lengths"],
        ),

rule combine_preds:
    input:
        expand(
            "{out_dir}/{kingdom}/{length}/{tool}_out/{tool}_pred_formatted.csv",
            out_dir=config["out_dir"],
            kingdom=config["kingdoms"],
            length=config["lengths"],
            tool=config["tools"]
        ),
    output:
        expand("{out_dir}/{tool}_out/combined.csv",
            out_dir=config["out_dir"],
            tool=config["tools"]),
    params:
        out_dir=config["out_dir"],
        combine=config["combine"],
    shell:
        """
        source activate snakemake_env

        {params.combine} -o {params.out_dir}/{wildcards.tool}_out {input}
        """

rule pred_deepvirfinder:
    input:
        config["in_dir"] + "/{kingdom}/{length}/selected_frags.fasta",
    output:
        config["out_dir"]
        + "/{kingdom}/{length}/dvf_out/selected_frags.fasta_gt1bp_dvfpred.txt",
    params:
        dvf=config["deepvirfinder"],
        cores=config["deepvirfinder_cores"],
        in_dir=config["in_dir"],
        out_dir=config["out_dir"],
    log:
        "logs/dvf/{kingdom}_{length}.log",
    benchmark:
        "benchmarks/dvf/{kingdom}_{length}_benchmark.txt"
    shell:
        """
        source activate deepvirfinder_env

        ({params.dvf} -i {params.in_dir}/{wildcards.kingdom}/{wildcards.length}/selected_frags.fasta -o {params.out_dir}/{wildcards.kingdom}/{wildcards.length}/dvf_out -c {params.cores}) 2> {log}
        """


rule reformat_dvf:
    input:
        config["out_dir"]
        + "/{kingdom}/{length}/dvf_out/selected_frags.fasta_gt1bp_dvfpred.txt",
    output:
        config["out_dir"] + "/{kingdom}/{length}/dvf_out/dvf_pred_formatted.csv",
    params:
        out_dir=config["out_dir"],
        reformat=config["reformat"],
    shell:
        """
        source activate snakemake_env

        {params.reformat} -l {wildcards.length} -a {wildcards.kingdom} -t dvf -o {params.out_dir}/{wildcards.kingdom}/{wildcards.length}/dvf_out {input}
        """

rule pred_seeker:
    input:
        config["in_dir"] + "/{kingdom}/{length}/selected_frags.fasta",
    output:
        config["out_dir"] + "/{kingdom}/{length}/seeker_out/pred.txt",
    params:
        seeker=config["seeker"],
        in_dir=config["in_dir"],
        out_dir=config["out_dir"],
    log:
        "logs/seeker/{kingdom}_{length}.log",
    benchmark:
        "benchmarks/seeker/{kingdom}_{length}_benchmark.txt"
    shell:
        """
        source activate seeker_env


        ({params.seeker} {params.in_dir}/{wildcards.kingdom}/{wildcards.length}/selected_frags.fasta > {params.out_dir}/{wildcards.kingdom}/{wildcards.length}/seeker_out/pred.txt) 2> {log}
        """


rule reformat_seeker:
    input:
        config["out_dir"] + "/{kingdom}/{length}/seeker_out/pred.txt",
    output:
        config["out_dir"] + "/{kingdom}/{length}/seeker_out/seeker_pred_formatted.csv",
    params:
        out_dir=config["out_dir"],
        reformat=config["reformat"],
    shell:
        """
        source activate snakemake_env

        {params.reformat} -l {wildcards.length} -a {wildcards.kingdom} -t seeker -o {params.out_dir}/{wildcards.kingdom}/{wildcards.length}/seeker_out {input}
        """

rule pred_virsorter:
    input:
        config["in_dir"] + "/{kingdom}/{length}/selected_frags.fasta",
    output:
        config["out_dir"] + "/{kingdom}/{length}/virsorter_out/final-viral-boundary.tsv",
        config["out_dir"] + "/{kingdom}/{length}/virsorter_out/final-viral-combined.fa",
        config["out_dir"] + "/{kingdom}/{length}/virsorter_out/final-viral-score.tsv",
    params:
        virsorter=config["virsorter"],
        in_dir=config["in_dir"],
        out_dir=config["out_dir"],
    log:
        "logs/virsorter/{kingdom}_{length}.log",
    benchmark:
        "benchmarks/virsorter/{kingdom}_{length}_benchmark.txt"
    shell:
        """
        source activate virsorter2_env


        ({params.virsorter} -i {params.in_dir}/{wildcards.kingdom}/{wildcards.length}/selected_frags.fasta -w {params.out_dir}/{wildcards.kingdom}/{wildcards.length}/virsorter_out) 2> {log}
        """

rule reformat_virsorter:
    input:
        config["out_dir"] + "/{kingdom}/{length}/virsorter_out/final-viral-score.tsv",
    output:
        config["out_dir"] + "/{kingdom}/{length}/virsorter_out/virsorter_pred_formatted.csv",
    params:
        out_dir=config["out_dir"],
        reformat=config["reformat"],
    shell:
        """
        source activate snakemake_env

        {params.reformat} -l {wildcards.length} -a {wildcards.kingdom} -t virsorter -o {params.out_dir}/{wildcards.kingdom}/{wildcards.length}/virsorter_out {input}
        """


