(PROFILES,) = glob_wildcards(config["profiles_dir"] + "/{p}.txt")


rule all:
    expand("{dir}/{id}_profile.txt", dir=config["profiles_dir"] + id=PROFILES),
        expand("{dir}/{id}_files.txt", dir=config["profiles_dir"] + id=PROFILES),
    # input:
    #     expand(
    #         "{s}/{a}_{m}_reads_R1.fastq",
    #         s=config["simulated_dir"],
    #         m=config["model"],
    #         a=config["abundances"],
    #     ),
    #     expand(
    #         "{s}/{a}_{m}_reads_R2.fastq",
    #         s=config["simulated_dir"],
    #         m=config["model"],
    #         a=config["abundances"],
    #     ),


rule make_profiles:
    input:
        expand("{dir}/{id}.txt", dir=config["braken_dir"], id=PROFILES),
    output:
        expand("{dir}/{id}_profile.txt", dir=config["profiles_dir"] + id=PROFILES),
        expand("{dir}/{id}_files.txt", dir=config["profiles_dir"] + id=PROFILES),
    params:
        braken_profiler=config["braken_profiler"],
        out_dir=config["profiles_dir"]
    shell:
        """
            {params.braken_profiler} -o profiles_dir {input}
        """


# rule simulate_reads:
#     input:
#         genomes=config["genomes_dir"] + "/cat_genomes.fasta",
#         abundances=config["profiles_dir"]+"/profile_{abundance}.txt",
#     output:
#         config["simulated_dir"] + "/{abundance}_{model}_reads_R1.fastq",
#         config["simulated_dir"] + "/{abundance}_{model}_reads_R2.fastq",
#     params:
#         simulator=config["simulator"],
#         simulated_dir=config["simulated_dir"],
#         cpus=config["simulator_cpus"],
#         reads=config["n_reads"],
#     shell:
#         """
#         source ~/.bashrc
#         source activate insilicoseq_env

#         {params.simulator} {params.cpus} {params.reads} \
#         --model {wildcards.model} \
#         --abundance_file {input.abundances} \
#         --output {params.simulated_dir}/{wildcards.abundance}_{wildcards.model}_reads \
#          --genomes {input.genomes}
#         """
